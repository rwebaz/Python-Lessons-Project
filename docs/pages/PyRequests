---
title: PyRequests
layout: default
excerpt: Place the introducing line of text ie.) the 'tagline' here ...
hint: Place the intro paragraph ie.) the 'hypothesis' here ...
repo: Python-Lessons-Project
ver_date: 11-26-19
navigation_weight: 8
categories: template
---
{% include toc.md %}

## First Subtitle

> **Hint**. {{ page.hint }}

More to come ...

## Import Code

```html
<hgroup class='text-left'>
    <h4>Python Http Requests</h4>
</hgroup>
    <hr class='green-groove' />

<p>
    <span>The "requests" library is a popular Python library for making HTTP requests. It simplifies the process of sending HTTP requests and handling the corresponding responses. Here are some key features and functionalities provided by the "requests" library:

      1. Simple and Elegant API: The library provides an intuitive and easy-to-use API for sending HTTP requests. It abstracts away the complexities of working directly with sockets and provides a higher-level interface.
      
      2. HTTP Request Methods: The library supports various HTTP methods such as GET, POST, PUT, DELETE, HEAD, and more. You can choose the appropriate method based on the type of request you want to make.
      
      3. Request Parameters: You can include query parameters, request headers, cookies, and authentication credentials as part of your requests. The library allows you to pass these parameters easily as arguments to the request functions.
      
      4. Response Handling: Once a request is made, the library returns a response object that contains information about the response received from the server. You can access attributes like status code, headers, and content from the response object.
      
      5. JSON Response Parsing: The library provides built-in support for handling JSON responses. You can use the `.json()` method on the response object to parse the response content as JSON and work with it as a Python dictionary.
      
      6. Session Management: The library supports sessions, which allow you to persist certain parameters across multiple requests. This can be useful when working with APIs that require authentication or when you want to reuse certain headers or cookies.
      
      7. Error Handling: The library automatically raises exceptions for common errors like invalid URLs, network timeouts, and connection errors. You can catch these exceptions and handle them gracefully in your code.
      
      Overall, the "requests" library provides a convenient and powerful way to interact with HTTP APIs in Python. It simplifies the process of making HTTP requests, handling responses, and working with data formats like JSON. It is widely used in web scraping, interacting with RESTful APIs, and general-purpose HTTP communication in Python applications.</span>
    <span>But, how will the code execute in Strict Mode?</span>
    <span>One way to find out is to transfer our code to a (<a href="../js/scripts/strict-objects.js" title="Click To Review the Original Javascript file" target="_blank">.js</a>) page and invoke Strict Mode at the top of the program.</span>
</p>

<pre class='flex-box'>
<span>Invoke Strict Mode ...</span>
{% highlight html linenos %}
//Code

{% endhighlight %}
<span>Place at the top of program.</span>
</pre>
<hr class='green-groove' />

<p>
    <span>Let's try that.</span>
</p>

<p>
    <span>Copy and paste the contents of the entire (<a href='../js/scripts/strict-objects.js' title='Click To Review the Original Javascript file' target='_blank'>.js</a>) file into the Firefox Web-console ...</span>
    <span>Then, hit the <kbd>Enter</kbd> key.</span>
</p>

<pre class='flex-box'>
    <span lang='es' title='Sp. for 'Finish''>Finito! <i class='icon-large icon-flower'></i></span>
</pre>
```

## Last Subtitle

More to come ...

***

**Note**. The above synopsis was derived from an article written by Blank Author [[1](#BLANKAUTHOR){:.red}].

1. {:#BLANKAUTHOR}[A Narrative of Psychology by Blank Author, Jan #1999](http://cowles.yale.edu/sites/default/files/files/pub/d20/d2069.pdf){:title="Click to Review ..."}{:target="_blank"}

***

{% include patreon-link.md %}
